{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Pycamt","text":"<p>CAMT (Cash Management) is a set of bank statement messages defined by ISO 20022, considered the universal financial industry message scheme. There are different standards for different bank statement types. This article focuses specifically on camt.053.</p> <p>The camt.053 is a detailed bank to customer statement listing all entries booked on the customer\u2019s bank account on a given day. It can be considered an alternative (or replacement) of the less structured MT 940 bank file.</p>"},{"location":"#overview","title":"Overview","text":"<p>Pycamt is a flexible and extensible Python class designed to parse CAMT.053 XML files, which are used for bank-to-customer account report messages in the financial industry. The parser supports multiple versions of the CAMT.053 standard, making it a versatile tool for extracting financial transaction data.</p> <p>https://docs.findock.com/processing-camt-053-files#:~:text=The%20camt.,structured%20MT%20940%20bank%20file.</p>"},{"location":"#installation","title":"Installation","text":"<p>To use Camt053Parser, simply copy the Camt053Parser.py file into your project directory, or include it as part of your Python package.</p> <pre><code>pip install pycamt\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#creating-an-instance","title":"Creating an Instance","text":"<p>You can create an instance of the Camt053Parser by providing the XML data as a string:</p> <pre><code>from Camt053Parser import Camt053Parser\n\nxml_data = \"&lt;Document&gt;...&lt;/Document&gt;\"  # Your CAMT.053 XML data as a string\nparser = Camt053Parser(xml_data)\n</code></pre> <p>Alternatively, you can initialize the parser with a file path:</p> <pre><code>parser = Camt053Parser.from_file('path/to/your/file.xml')\n</code></pre>"},{"location":"#extracting-group-header-information","title":"Extracting Group Header Information","text":"<p>To extract group header information such as message ID and creation date/time:</p> <pre><code>group_header = parser.get_group_header()\nprint(group_header)\n</code></pre>"},{"location":"#extracting-transactions","title":"Extracting Transactions","text":"<p>To retrieve all transaction entries from the file:</p> <pre><code>transactions = parser.get_transactions()\nfor transaction in transactions:\n    print(transaction)\n</code></pre>"},{"location":"#extracting-statement-information","title":"Extracting Statement Information","text":"<p>To get basic statement information like IBAN and opening/closing balance:</p> <pre><code>statement_info = parser.get_statement_info()\nprint(statement_info)\n</code></pre>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions to Camt053Parser are welcome! If you have suggestions for improvements or encounter any issues, please feel free to open an issue or submit a pull request.</p>"},{"location":"#guidelines","title":"Guidelines","text":"<p>For submitting enhancements or new features, please ensure your code is well-documented and includes relevant docstrings. Ensure your contributions are tested to maintain reliability and stability of the parser. Adhere to the existing code style for consistency. License Specify your chosen license here, providing users with information on how they can use, modify, and share your code.</p>"},{"location":"modules/","title":"Modules","text":""}]}